#! /bin/sh
# This file is sourced by direnv when entering the directory. The content below
# is pulled from: https://divnix.github.io/std/guides/envrc.html

#source "$(
#    nix eval \
#        --no-update-lock-file \
#        --no-write-lock-file \
#        --no-warn-dirty \
#        --accept-flake-config \
#        .#__std.direnv_lib 2>/dev/null
#)"
source_up_if_exists .envrc.local
export DEVSHELL_TARGET=${DEVSHELL_TARGET:-dev}
export AWS_SECRET_KEY=$(cat ~/.aws/credentials | grep secre | cut -d' ' -f3)
export AWS_ID=$(cat ~/.aws/credentials | grep "_id" | cut -d' ' -f3)
# This was suggested to replace __std.direnv
# so far I get error when I try, will need to look more into this:
# does not provide attribute 'packages.x86_64-linux.__std.actions.x86_64-linux.repo.shells.default.enter'

#source $(fetchurl https://raw.githubusercontent.com/paisano-nix/direnv/main/lib "sha256-XKqDMz+VtF8VSJ4yOok4mO1xxXUZbD1t2yC0JmEXrCI=")
#use env //repo/shells/default

# This works for now
. "$(nix eval .#__std.direnv_lib)"

# Here we can select which development environment is used by `direnv`. We only
# have one in this case, and we called it default.
# See: /nix/std-example/devshells.nix).
use std nix "//ops/devshells/${DEVSHELL_TARGET}"
#use std nix "//rust-app/apps/default:build"
#use std nix "//example/apps/default:run"
